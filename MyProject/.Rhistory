plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 2)
# 실습
#install.packages('gplots')
windows(10,8)
plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 2)
plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 2)
plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 2))
plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 2)
plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 3)
plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 3)
plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 3)
aov.result <- aov(count ~ spray, data=df) #분산분석
plot(TukeyHSD(aov.result),
las =1,
col ='tomato',
lwd = 3)
plot(TukeyHSD(aov.result),
las =1,
lwd = 3)
plot(TukeyHSD(aov.result))
plot(TukeyHSD(aov.result),col='tomato')
plot(TukeyHSD(aov.result),
col='tomato',
las= 1,
lwd= 2)
plot(TukeyHSD(aov.result),
col='tomato',
las= 1)
plot(TukeyHSD(aov.result),
col='tomato',
las= 1,
lwd= 1)
plot(TukeyHSD(aov.result),
col='tomato',
las= 1)
library(car)
qqplot(df$count)
qqPlot(df$count)
qqPlot(df$count,pch=19)
qqPlot(df$count,pch=19, col='orange')
shapiro.test(df$count)
leveneTest(count ~ spray, data = df)
bartlett.test(count ~ spray, data = df)
oneway.test(count ~ spray, data = df)
str(df)
unique(df$dose)
str(df)
df <- ToothGrowth
str(df)
unique(df$dose)
df$dose <- factor(ToothGrowth$dose, levels = c(0.5,1.0,2.0),
labels = c('L','M','H'))
Str(df)
str(df)
tapply(df$len,
INDEX = list(SUPP=df$supp, DOSE=df$dose),
FUN =mean)
with(df, tapply(len,
INDEX = list(SUPP=$supp, DOSE=$dose),
with(df, tapply(len,
INDEX = list(SUPP=supp, DOSE=dose),
FUN =maen))
with(df, tapply(len,
INDEX = list(SUPP=supp, DOSE=dose),
FUN =mean))
boxplot(len ~ supp*dose, data =df)
boxplot(len ~ supp*dose, data =df, col=1:6)
boxplot(len ~ supp*dose, data =df, col=1:2)
boxplot(len ~ supp*dose, data =df, col=c('tomato','orange'))
aov.result <- aov(len~supp*dose, data=df)
summary(aov.result)
# 사후분석
TukeyHSD(aov.result)
plot(TukeyHSD(aov.result), las=1)
# 사후분석
TukeyHSD(aov.result)
plot(TukeyHSD(aov.result), las=1)
plot(TukeyHSD(aov.result), las=1, col='red')
# 상관계수
cats
# 상관계수
library(cats)
# 상관계수
library(Cats)
# 상관계수
cats
# 상관계수
library(cats)
cor(cats$Bwt, cats$Hwt, method='pearson')
cor(cats$Bwt, cats$Hwt, method='spearman')
cor(cats$Bwt, cats$Hwt, method='kendall')
# 상관계수
library(cats)
# 상관계수
install.packages('cats')
# 상관계수
#install.packages('cats')
library(cats)
cor(cats$Bwt, cats$Hwt, method='pearson')
cor(cats$Bwt, cats$Hwt, method='spearman')
cor(cats$Bwt, cats$Hwt, method='kendall')
cats
# 상관계수
#install.packages('cats')
library(cats)
cor(cats$Bwt, cats$Hwt, method='pearson')
cats
cor(cats$Bwt, cats$Hwt, method='pearson')
cor(cats$Bwt, cats$Hwt, method='pearson')
library(HistData)
library(HistData)
install.packages('HistData')
#install.packages('HistData')
library(HistData)
df <- GaltonFamilies
df
str(df)
cor(df$midparentHeight,df$childHeight)
plot(childheight ~ midparentHeight, data = df,
col = 'tomato', alpha = 0.3,
pch = 19)
plot(childHeight ~ midparentHeight, data = df,
col = 'tomato', alpha = 0.3,
pch = 19)
windows(8,6)
plot(childHeight ~ midparentHeight, data = df,
col = 'tomato', alpha = 0.3,
pch = 19)
plot(childHeight ~ midparentHeight, data = df,
col = 'steelblue', alpha = 0.3,
pch = 19)
plot(childHeight ~ midparentHeight, data = df,
col = adjustcolor('steelblue', alpha = 0.5),
pch = 19)
plot(jitter(childHeight) ~ jitter(midparentHeight),
data = df,
col = adjustcolor('steelblue', alpha = 0.5),
pch = 19)
plot(childHeight ~ midparentHeight, data = df,
col = adjustcolor('steelblue', alpha = 0.5),
pch = 19)
lm(chidrenHeight~ midparentHeight),data= df)
lm(chidHeight~ midparentHeight),data= df)
lm(chidHeight~ midparentHeight,data= df)
lm(childHeight~ midparentHeight,data= df)
abline(model, col ='tomato')
abline(model, col ='tomato' lwd=3)
abline(model, col ='tomato' ,lwd=3, lty=1)
abline(model, col ='tomato' ,lwd=3)
moder <- lm(childHeight~ midparentHeight,data= df)
abline(model, col ='tomato' ,lwd=3)
model <- lm(childHeight~ midparentHeight,data= df)
abline(model, col ='tomato' ,lwd=3)
plot(x,y,pch =19, col = 'skyblue')
x <- runif(n=100, min = 0, max=100)
y <- 3*x +5
plot(x,y,pch =19, col = 'skyblue')
cor(x,y)
lm(y~x)
y <- 3*x +5 + rnorm(100,0,20)
cor(x,y)
lm(y~x)
rnorm(100,0,20)
lm(y~x)
abline(model, col ='tomato', lwd=2)
model <- lm(y~x)
abline(model, col ='tomato', lwd=2)
x <- runif(n=100, min = 0, max=100)
y <- 3*x +5 + rnorm(100,0,20)
plot(x,y,pch =19, col = 'skyblue')
cor(x,y)
lm(y~x)
model <- lm(y~x)
abline(model, col ='tomato', lwd=2)
summary(model)
abline(a = 1, b =5, col ='red',
lwd =1, lty =2)
library(car)
Prestige
data(Prestige)
df <- Prestige
str(df)
table(df$type)
barplot(table(df$type), col ='orange')
windows(8,6)
barplot(table(df$type), col ='orange')
hist(df$income)
hist(df$income, col = 'tomato', breaks=20)
shapiro.test(df$income)
# 히스토그램
hist(df$income, col = 'tomato', breaks=20)
hist(df$women, col = 'tomato', breaks=20)
hist(df$prestige, col = 'tomato', breaks=20)
shapiro.test(df$women)
shapiro.test(df$prestige)
shapiro.test(df$women)
shapiro.test(df$women)
shapiro.test(df$prestige)
plot(dfm[, -(5:6)], col = 'skyblue')
plot(df[, -(5:6)], col = 'skyblue')
lm(income ~ education, data = df)
cor(df[,-(5:6)])
model <- lm(income ~ education, data =df)
summary(model)
plot(income ~ education, data = df)
plot(income ~ education, data = df, pch=19, col='tomato')
abline(model, col = 'tomato', lwd=2)
abline(model, col = 'skyblue', lwd=2)
plot(income ~ education, data = df,
pch=19, col='skyblue')
abline(model, col = 'tomato', lwd=2)
model <- lm(income ~ education + women + prestige,
data = df)
summary(model)
model <- lm(income ~ education + women,
data = df)
model <- lm(income ~ education + prestige,
data = df)
summary(model)
model <- lm(income ~ education + women,
data = df)
summary(model)
model <- lm(income ~ education + women + prestige,
data = df)
summary(model)
model <- lm(income ~ education + prestige,
data = df)
summary(model)
model <- lm(income ~ prestige + women,
data = df)
summary(model)
model <- lm(income ~ education + prestige,
data = df)
summary(model)
# 다중 회구분석
library(stargazer)
# 다중 회구분석
install.packages('stargazer')
library(stargazer)
stargazer(model)
stargazer(model,type = 'text')
model <- lm(income ~ prestige + women,
data = df)
summary(model)
stargazer(model,type = 'text')
plot(model)
windows(8,6)
plot(model)
par(nrow=c(2,2))
par(vrow =c(2,2))
par(frow =c(2,2))
?par
par(mfrow =c(2,2))
plot(model)
par(nrow=c(1,1))
windows(8,6)
par(mfrow =c(2,2))
plot(model)
par(mrow=c(1,1))
model = lm(incom ~ education, data =df)
plot(income ~ education, data = df)
par(mrow=c(1,1))
par(mfrow=c(1,1))
model = lm(incom ~ education, data =df)
plot(income ~ education, data = df)
plot(income ~ education, data = df, col= 'skyblue',pch=19)
model = lm(incom ~ education+ I(education^2), data =df)
summary(model)
model = lm(incom ~ education+ I(education^2), data =df)
model = lm(income ~ education, data =df)
plot(income ~ education, data = df, col= 'skyblue',pch=19)
model = lm(income ~ education+ I(education^2), data =df)
summary(model)
abline(model)
model <-  lm(income ~ education+ I(education^2), data =df)
summary(model)
abline(model)
model <-  lm(income ~ education+ I(ecation^2), data =df)
model <-  lm(income ~ education+ I(ecaution^2), data =df)
model <-  lm(income ~ education+ I(ecuation^2), data =df)
lty = 1, lwd = 3, col = "tomato")
with(df,
with(df,
lines(arrange(data.frame(education, fitted(model)),
education),
lty = 1, lwd = 3, col = "tomato"))
with(df,
library(dplyr)
with(df,
lines(arrange(data.frame(education, fitted(model)),
education),
lty = 1, lwd = 3, col = "tomato"))
summary(model)
with(df,
lines(arrange(data.frame(education, fitted(model)),
education),
lty = 1, lwd = 3, col = "tomato"))
libaray(corrgram)
corrgram(df)
library(corrgram)
corrgram(df)
install.packages('corrgram')
library(corrgram)
corrgram(df)
lm(mpg ~ ., data =df)
summary(model)
model <- lm(mpg ~ ., data =df)
summary(model)
lm(mpg ~ ., data =df)
library(car)
lm(mpg ~ ., data =df)
car
library(car)
car
df <- mtcars[, 1:6]
lm(mpg ~ ., data =df)
model <- lm(mpg ~ ., data =df)
summary(model)
summary(model)
model <- lm(mpg ~ hp+ wt, data =df)
summary(model)
mod.selected <-  step(model, direction='backword')
mod.selected <- step(model, direction='backward')
summary(mod.selected)
df <- read,csv('../FirstMiniProject/HousePrices.csv')
df <- read.csv('../FirstMiniProject/HousePrices.csv')
df
mod.selected <- step(model, direction='backward')
mod.selected <- step(df, direction='backward')
df
str(df
str(df)
str(df)
df.lm <- lm(SalePrice~1, data=df)
mod.selected <- step(df, direction='backward')
summary(mod.selected)
mod.selected <- step(df, direction='backward')
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
summary(mod.selected)
mod.selected
mod.selected
df.lm <- lm(SalePrice~'1', data=df)
mod.selected
df.lm <- lm(SalePrice~1, data=df,scope=list(lower~1,upper=~SalePrice))
df.lm <- lm(SalePrice~1, data=df,scope=list(lower=~1,upper=~SalePrice))
mod.selected <- step(df.lm, scope=list(lower=~1,upper=~SalePrice),direction='backward')
df.lm <- lm(data=df)
mod.selected <- step(lm(SalePrice~1,df),
scope=list(lower=~1,upper=~SalePrice),
direction='backward')
summary(mod.selected)
str(df)
df.lm <- lm(SalePrice~1,data=df)
summary(mod.selected)
mod.selected <- step(lm(SalePrice~1,df),
scope=list(lower=~1,upper=~SalePrice),
direction='backward')
summary(mod.selected)
str(df)
df.lm <- lm(Id~1,data=df)
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
model <- lm(mpg ~ disp +drat + hp + wt,
data =df)
df <- mtcars[, 1:6]
model <- lm(mpg ~ disp +drat + hp + wt,
data =df)
mod.selected <- step(model, direction='backward')
mod.selected
summary(mod.selected)
df
df <- mtcars[, 1:6]
df
df.lm <- lm(SalePrice~(-1),data=df)
# 연습문제
# Kaggle House Price 데이터셋에서
# 다중 선형 회구의 변수 선택을 통해
# 최적의 독립 변수 조합을 찾아보시오.
# 1. 전진선택법으로 찾은 조합은? R2, Adjusted R2?
# 2. 후진선택법으로 찾은 조합은? R2, Adjusted R2?
# 상수항 선택법 : SalesPrice ~ 1
df <- read.csv('../FirstMiniProject/HousePrices.csv')
df.lm <- lm(SalePrice~(-1),data=df)
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
str(df)
df.lm <- lm(SalePrice~SaleCondition,data=df)
mod.selected <- step(df.lm, direction='backward')
df.lm <- lm(SalePrice~Id,data=df)
mod.selected <- step(df.lm, direction='backward')
df.lm <- lm(SalePrice~Id,data=df)
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
model <- lm(mpg ~ disp +drat + hp + wt,
data =df)
df <- mtcars[, 1:6]
model <- lm(mpg ~ disp +drat + hp + wt,
data =df)
mod.selected <- step(model, direction='backward')
summary(mod.selected)
mod.selected <- step(lm(SalePrice~1,df),
scope=list(lower=~1,upper=~SalePrice),
direction='backward')
# 연습문제
# Kaggle House Price 데이터셋에서
# 다중 선형 회구의 변수 선택을 통해
# 최적의 독립 변수 조합을 찾아보시오.
# 1. 전진선택법으로 찾은 조합은? R2, Adjusted R2?
# 2. 후진선택법으로 찾은 조합은? R2, Adjusted R2?
# 상수항 선택법 : SalesPrice ~ 1
df <- read.csv('../FirstMiniProject/HousePrices.csv')
mod.selected <- step(lm(SalePrice~1,df),
scope=list(lower=~1,upper=~SalePrice),
direction='backward')
summary(mod.selected)
df.lm <- lm(SalePrice~1,data=df)
mod.selected <- step(df.lm, direction='backward')
summary(mod.selected)
df <- read.csv('../FirstMiniProject/HousePrices.csv')
str(df)
dim(df)
is.num <- c()
for (i in 1:80){
is.num[i] <- is,numeric(df[,i])
is.num[i] <- is.numeric(df[,i])
for (i in 1:80){
is.num[i] <- is.numeric(df[,i])
}
is.num
df <- df[,is.num]
df
df <- df[,-1]
dim(df)
df <- df[complete.cases(df),]
dim(df)
str(df)
model <- lm(SalePrice~., data =df)
summary(model)
summary(model)
mod.selected <- step(model, direction = 'backward')
summary(mod.selected)
mod.selected <- step(model, direction = 'frontward')
mod.selected <- step(model, direction = 'frontward')
mod.selected <- step(model, direction = 'forward')
mod.selected <- step(model, direction = 'backward')
mod.selected <- step(model, direction = 'forward')
summary(mod.selected)
mod.selected <- step(model, direction = 'backward')
summary(mod.selected)
mod.selected <- step(model, direction = 'forward')
summary(mod.selected)
InsectSprays
df <- InsectSprays
sprays.lm <- lm(count~spray,df)
sprays.lm
model <- lm(count~spray,df)
summary(model)
str(df)
contrasts(df$spray)
df <- mtcars[,1:6]
str(df)
head(df)
table(df$cyl)
df$cyl <- factor(df$cyl)
head(df)
table(df$cyl)
lm(mpg~.,data =df)
str(df)
df <- mtcars[,1:6]
str(df)
df$cyl <- factor(df$cyl)
head(df)
table(df$cyl)
lm(mpg~.,data =df)
model <- lm(mpg~.,data =df)
summary(model)
model <- lm(mpg~.,data =df)
plot(iris[iris$Species,c(1,5)])
str(iris)
df <- split(iris,f = iris$Species)
df <- rbind(df$setosa, df$versicolor)
df <- rbind(df$setosa, df$versicolor)
df
df <- split(iris,f = iris$Species)
df
df <- rbind(df$setosa, df$versicolor)
plot(df[,c(3,5)])
